parameters:
- name: build_stage
  type: object
- name: target_stage
  type: object
- name: api_project
  type: string
- name: deployment_target
  type: string
- name: build_environments_mapping
  type: object
- name: environment_set

jobs:
- deployment: Build_${{parameters.api_project}}_for_API_Gateway_${{parameters.deployment_target}}
  environment: API_Gateway_${{parameters.environment_set}}_${{parameters.build_environments_mapping[parameters.deployment_target]}}
  variables:
  - group: API_Gateway_${{parameters.environment_set}}_users
  - group: API_Gateway_${{parameters.environment_set}}_${{parameters.build_stage.name}}_users
  - group: API_Gateway_${{parameters.environment_set}}_${{parameters.build_environments_mapping[parameters.deployment_target]}}_users
  - ${{ if not(parameters.target_stage.is_design_stage) }}:
    - group: API_Gateway_${{parameters.deployment_target}}_value_substitutions
  pool:
    name: ${{parameters.build_stage.build_pool_name}}
    vmImage: ${{parameters.build_stage.build_pool_image}}
  strategy:
    runOnce:    #rolling, canary are the other strategies that are supported
      deploy:
        steps:
        - checkout: self
          submodules: "true"
          persistCredentials: "true"
          fetchDepth: 0
        - download: none
        - template: /pipelines/step-templates/build-api.yml
          parameters:
            environment_set: ${{parameters.environment_set}}
            api_project: ${{parameters.api_project}}
            build_environment_file: "API_Gateway_${{parameters.build_environments_mapping[parameters.deployment_target]}}_environment.json"
            build_stage_name: ${{parameters.build_stage.name}}
            build_environment_name: ${{parameters.build_environments_mapping[parameters.deployment_target]}}
            target_stage_name: ${{parameters.deployment_target}}
            prepare_condition: ${{true}}
            test_condition: ${{ not(parameters.target_stage.is_design_stage) }}
            replace_condition: ${{ not(parameters.target_stage.is_design_stage) }}
        - template: /pipelines/step-templates/store-build.yml
          parameters:
            target_stage_name: ${{parameters.deployment_target}}
            api_project: ${{parameters.api_project}}
        - bash: |
            echo "##vso[build.addbuildtag]${{parameters.environment_set}}"
            echo "##vso[build.addbuildtag]${{parameters.build_stage.name}}"
            echo "##vso[build.addbuildtag]${{parameters.build_environments_mapping[parameters.deployment_target]}}"
            echo "##vso[build.addbuildtag]${{parameters.api_project}}"
            echo "##vso[build.addbuildtag]${{parameters.api_project}}_${{parameters.build_stage.name}}"
            echo "##vso[build.addbuildtag]${{parameters.api_project}}_${{parameters.build_environments_mapping[parameters.deployment_target]}}"
          displayName: Add build tags