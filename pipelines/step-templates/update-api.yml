parameters:
- name: environment_set
- name: environment_file
- name: stage_name
- name: environment_name
- name: api_id
- name: update_type
- name: update_url
- name: update_username
- name: update_password
- name: update_file

steps:
- bash: |
   echo "##vso[task.setvariable variable=environment_hostname]`jq -r '.values[] | select(.key == "hostname") | .value' environments/${{parameters.environment_set}}/${{parameters.environment_file}}`"
   echo "##vso[task.setvariable variable=environment_ip]`jq -r '.values[] | select(.key == "ip") | .value' environments/${{parameters.environment_set}}/${{parameters.environment_file}}`"
   echo "##vso[task.setvariable variable=environment_protocol]`jq -r '.values[] | select(.key == "protocol") | .value' environments/${{parameters.environment_set}}/${{parameters.environment_file}}`"
   echo "##vso[task.setvariable variable=environment_port]`jq -r '.values[] | select(.key == "port") | .value' environments/${{parameters.environment_set}}/${{parameters.environment_file}}`"
   echo "##vso[task.setvariable variable=environment_insecure_flag]`jq -r '.values[] | select(.key == "insecure_flag") | .value' environments/${{parameters.environment_set}}/${{parameters.environment_file}}`"
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Read and parse API Gateway ${{parameters.environment_name}} configuration, extract protocol, ip, hostname, port and insecure_flag'

- bash: |
    newman run postman/collections/utilities/update/Update_API.json --reporters cli \
    --env-var updater_user='$(updater_user)' \
    --env-var updater_password='$(updater_password)' \
    --env-var apiId='${{parameters.api_id}}' \
    --env-var updateType='${{parameters.update_type}}' \
    --env-var updateUrl='${{parameters.update_url}}' \
    --env-var updateCredentials=`echo -n ${{parameters.update_username}}:${{parameters.update_password}} | base64` \
    --env-var updateFile='$(System.DefaultWorkingDirectory)/schemas/${{parameters.update_file}}' \
    -e environments/${{parameters.environment_set}}/${{parameters.environment_file}} \
    $(environment_insecure_flag)
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Update API on API Gateway ${{parameters.environment_name}}'
  env:
    no_proxy: $(environment_ip)